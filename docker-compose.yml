version: '3.8'

services:
  # Backend API (.NET 8.0)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: voxmed-api
    ports:
      - "8080:8080"
      - "5001:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Host=database;Port=5432;Database=voxmeddb;Username=voxmed;Password=VoxMed@2025!
      - JwtSettings__SecretKey=VoxMedAuthenticationSecretKeyForJWTTokenGeneration123456789
      - JwtSettings__Issuer=VoxMedAPI
      - JwtSettings__Audience=VoxMedApp
      - JwtSettings__ExpirationInHours=24
    depends_on:
      database:
        condition: service_healthy
    networks:
      - voxmed-network
    volumes:
      - ./backend:/app/source
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Vue.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: voxmed-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080
      - VITE_AUTH_ENDPOINT=/api/auth/login
      - VITE_APP_NAME=VoxMed
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - voxmed-network
    restart: unless-stopped

  # Database (PostgreSQL)
  database:
    image: postgres:15-alpine
    container_name: voxmed-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=voxmeddb
      - POSTGRES_USER=voxmed
      - POSTGRES_PASSWORD=VoxMed@2025!
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - voxmed-db-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - voxmed-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voxmed -d voxmeddb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: voxmed-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - voxmed-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  voxmed-db-data:
    driver: local

networks:
  voxmed-network:
    driver: bridge
